# АТРИБУТЫ КЛАССА
# список атрибутов класса
Classname.__dict__
# обратиться к атрибуту
getattr(Classname, 'name')
# если атрибута нет, можно задать параметр по умолчанию
getattr(Classname, 'x', 200)
# изменить значение атрибута
Classname.name = 'Alex'
# если атрибута нет, Python динамически его создаст
Classname.x = 200
# также можно установить через setattr или создать новые аттрибуты
setattr(Classname, 'x', 200)
# удалить атрибут
del Classname.x
delattr(Classname, 'x')

# АТРИБУТЫ ЭКЗЕМПЛЯРА КЛАССА
class Car:
    model = 'Skoda'
a1 = Car()
# будет пустой, можно добавить новые атрибуты
a1.__dict__
a1.seat = 4
# можно изменить атрибут экземпляра, в классе атрибут не изменится
a1.model = 'Audi'
# если изменить, то в __dict__ появится атрибут ЭКЗЕМПЛЯРА класса

# ФУНКЦИЯ КАК АТРИБУТ КЛАССА
class Car:
    model = 'Skoda'
    engine = 1.4

    def drive():
        print('Wroom-wroom')

Car.drive()
getattr(Car, 'drive')()
# для вызова в экземпляре класса необходимо добавить декоратор @staticmethod